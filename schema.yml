openapi: 3.0.3
info:
  title: ''
  version: 0.0.0
paths:
  /api/schema/:
    get:
      operationId: api_schema_retrieve
      description: |-
        OpenApi3 schema for this API. Format can be selected via content negotiation.

        - YAML: application/vnd.oai.openapi
        - JSON: application/vnd.oai.openapi+json
      parameters:
      - in: query
        name: format
        schema:
          type: string
          enum:
          - json
          - yaml
      - in: query
        name: lang
        schema:
          type: string
          enum:
          - af
          - ar
          - ar-dz
          - ast
          - az
          - be
          - bg
          - bn
          - br
          - bs
          - ca
          - ckb
          - cs
          - cy
          - da
          - de
          - dsb
          - el
          - en
          - en-au
          - en-gb
          - eo
          - es
          - es-ar
          - es-co
          - es-mx
          - es-ni
          - es-ve
          - et
          - eu
          - fa
          - fi
          - fr
          - fy
          - ga
          - gd
          - gl
          - he
          - hi
          - hr
          - hsb
          - hu
          - hy
          - ia
          - id
          - ig
          - io
          - is
          - it
          - ja
          - ka
          - kab
          - kk
          - km
          - kn
          - ko
          - ky
          - lb
          - lt
          - lv
          - mk
          - ml
          - mn
          - mr
          - ms
          - my
          - nb
          - ne
          - nl
          - nn
          - os
          - pa
          - pl
          - pt
          - pt-br
          - ro
          - ru
          - sk
          - sl
          - sq
          - sr
          - sr-latn
          - sv
          - sw
          - ta
          - te
          - tg
          - th
          - tk
          - tr
          - tt
          - udm
          - ug
          - uk
          - ur
          - uz
          - vi
          - zh-hans
          - zh-hant
      tags:
      - api
      security:
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/vnd.oai.openapi:
              schema:
                type: object
                additionalProperties: {}
            application/yaml:
              schema:
                type: object
                additionalProperties: {}
            application/vnd.oai.openapi+json:
              schema:
                type: object
                additionalProperties: {}
            application/json:
              schema:
                type: object
                additionalProperties: {}
          description: ''
  /category/:
    get:
      operationId: category_list
      description: |-
        Класс просматривает категории товаров.
        Просмотр методом get.
        Возвращает успех или отказ с описанием
      tags:
      - category
      security:
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Category'
          description: ''
  /contact/:
    get:
      operationId: contact_list
      description: |-
        Класс просмотра и создания контактной информации о пользователе
        Просмотр контактной информации методом get
        Создание новой контактной информации методом post
        Удалить контактную информацию методом delete
        Возвращает успех или отказ с описанием
      tags:
      - contact
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Contact'
          description: ''
    post:
      operationId: contact_create
      description: |-
        Класс просмотра и создания контактной информации о пользователе
        Просмотр контактной информации методом get
        Создание новой контактной информации методом post
        Удалить контактную информацию методом delete
        Возвращает успех или отказ с описанием
      tags:
      - contact
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Contact'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Contact'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Contact'
        required: true
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Contact'
          description: ''
    delete:
      operationId: contact_destroy
      description: |-
        Класс просмотра и создания контактной информации о пользователе
        Просмотр контактной информации методом get
        Создание новой контактной информации методом post
        Удалить контактную информацию методом delete
        Возвращает успех или отказ с описанием
      tags:
      - contact
      security:
      - tokenAuth: []
      responses:
        '204':
          description: No response body
  /order/:
    get:
      operationId: order_list
      description: |-
        Класс позволяет посмотреть заказы пользователя или удалить заказ
        Просмотр заказа методом get
        Удаление заказа методом delete
        Возвращает успех или отказ с описанием
      parameters:
      - in: query
        name: id
        schema:
          type: integer
      tags:
      - order
      security:
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Order'
          description: ''
    delete:
      operationId: order_destroy
      description: |-
        Класс позволяет посмотреть заказы пользователя или удалить заказ
        Просмотр заказа методом get
        Удаление заказа методом delete
        Возвращает успех или отказ с описанием
      tags:
      - order
      security:
      - tokenAuth: []
      - {}
      responses:
        '204':
          description: No response body
  /orderitem/:
    get:
      operationId: orderitem_list
      description: |-
        Класс позволяет работать с товарами в заказе пользователя
        Просмотр заказа методом get
        Создание нового заказа методом post
        Изменение количество товара в заказе методом put
        Удаление товара из заказа методом delete
        Возвращает успех или отказ с описанием
      parameters:
      - in: query
        name: id
        schema:
          type: integer
      tags:
      - orderitem
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/OrderItem'
          description: ''
    post:
      operationId: orderitem_create
      description: |-
        Класс позволяет работать с товарами в заказе пользователя
        Просмотр заказа методом get
        Создание нового заказа методом post
        Изменение количество товара в заказе методом put
        Удаление товара из заказа методом delete
        Возвращает успех или отказ с описанием
      tags:
      - orderitem
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrderItem'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/OrderItem'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/OrderItem'
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrderItem'
          description: ''
    put:
      operationId: orderitem_update
      description: |-
        Класс позволяет работать с товарами в заказе пользователя
        Просмотр заказа методом get
        Создание нового заказа методом post
        Изменение количество товара в заказе методом put
        Удаление товара из заказа методом delete
        Возвращает успех или отказ с описанием
      tags:
      - orderitem
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrderItem'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/OrderItem'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/OrderItem'
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrderItem'
          description: ''
    delete:
      operationId: orderitem_destroy
      description: |-
        Класс позволяет работать с товарами в заказе пользователя
        Просмотр заказа методом get
        Создание нового заказа методом post
        Изменение количество товара в заказе методом put
        Удаление товара из заказа методом delete
        Возвращает успех или отказ с описанием
      tags:
      - orderitem
      security:
      - tokenAuth: []
      responses:
        '204':
          description: No response body
  /product/:
    get:
      operationId: product_list
      tags:
      - product
      security:
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Product'
          description: ''
    post:
      operationId: product_create
      tags:
      - product
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Product'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Product'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Product'
        required: true
      security:
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
          description: ''
  /product/filter/:
    get:
      operationId: product_filter_list
      tags:
      - product
      security:
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Product'
          description: ''
  /sendinvoice/:
    get:
      operationId: sendinvoice_list
      tags:
      - sendinvoice
      security:
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Order'
          description: ''
    post:
      operationId: sendinvoice_create
      tags:
      - sendinvoice
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Order'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Order'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Order'
        required: true
      security:
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Order'
          description: ''
  /shop/:
    get:
      operationId: shop_list
      description: |-
        Класс просмотра и создания магазинов
        Просмотр существующих магазинов методом get
        Создание нового магазина методом post
        Возвращает успех или отказ с описанием
      tags:
      - shop
      security:
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Shop'
          description: ''
    post:
      operationId: shop_create
      description: |-
        Класс просмотра и создания магазинов
        Просмотр существующих магазинов методом get
        Создание нового магазина методом post
        Возвращает успех или отказ с описанием
      tags:
      - shop
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Shop'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Shop'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Shop'
        required: true
      security:
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Shop'
          description: ''
  /status/:
    get:
      operationId: status_list
      tags:
      - status
      security:
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Order'
          description: ''
    post:
      operationId: status_create
      tags:
      - status
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Order'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Order'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Order'
        required: true
      security:
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Order'
          description: ''
  /up/:
    get:
      operationId: up_list
      tags:
      - up
      security:
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Category'
          description: ''
    post:
      operationId: up_create
      tags:
      - up
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Category'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Category'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Category'
        required: true
      security:
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Category'
          description: ''
  /user/:
    get:
      operationId: user_list
      tags:
      - user
      security:
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User'
          description: ''
    post:
      operationId: user_create
      description: |-
        Создание нового пользователя
        Возвращает успех или отказ с описанием
      tags:
      - user
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/User'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/User'
        required: true
      security:
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
    delete:
      operationId: user_destroy
      tags:
      - user
      security:
      - tokenAuth: []
      - {}
      responses:
        '204':
          description: No response body
  /user/login/:
    get:
      operationId: user_login_list
      tags:
      - user
      security:
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User'
          description: ''
    post:
      operationId: user_login_create
      tags:
      - user
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/User'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/User'
        required: true
      security:
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
  /user/register/:
    get:
      operationId: user_register_list
      tags:
      - user
      security:
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User'
          description: ''
    post:
      operationId: user_register_create
      description: |-
        Создание нового пользователя
        Возвращает успех или отказ с описанием
      tags:
      - user
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/User'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/User'
        required: true
      security:
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
    delete:
      operationId: user_register_destroy
      tags:
      - user
      security:
      - tokenAuth: []
      - {}
      responses:
        '204':
          description: No response body
components:
  schemas:
    Category:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        shop:
          type: array
          items:
            type: integer
            title: Магазин
          title: Магазин
        name:
          type: string
          title: Категория
          maxLength: 100
      required:
      - id
      - name
    Contact:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        user:
          type: integer
          title: Пользователь
        city:
          type: string
          title: Город
          maxLength: 50
        street:
          type: string
          title: Улица
          maxLength: 100
        house:
          type: string
          title: Дом
          maxLength: 15
        structure:
          type: string
          title: Корпус
          maxLength: 15
        building:
          type: string
          title: Строение
          maxLength: 15
        apartment:
          type: string
          title: Квартира
          maxLength: 15
        phone:
          type: string
          title: Телефон
          maxLength: 20
      required:
      - city
      - id
      - phone
      - street
    Order:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        buyer:
          type: integer
          title: Покупатель
        salesman:
          type: integer
          nullable: true
          title: Продавец
        dt:
          type: string
          format: date-time
          readOnly: true
          title: Дата заказа
        status:
          allOf:
          - $ref: '#/components/schemas/StatusEnum'
          title: Статус
      required:
      - buyer
      - dt
      - id
    OrderItem:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        order:
          type: integer
          nullable: true
          title: Заказ
        product_info:
          type: integer
          nullable: true
          title: Информация товара
        shop:
          type: integer
          nullable: true
          title: Магазин
        quantity:
          type: integer
          maximum: 2147483647
          minimum: 0
          nullable: true
          title: Количество
      required:
      - id
    Product:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        category:
          type: integer
          nullable: true
          title: Категория
        name:
          type: string
          title: Товар
          maxLength: 100
      required:
      - id
      - name
    Shop:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          title: Магазин
          maxLength: 100
        salesman:
          type: integer
          title: Владелец
        url:
          type: string
          format: uri
          nullable: true
          title: Веб-сайт
          maxLength: 200
      required:
      - id
      - name
      - salesman
    StatusEnum:
      enum:
      - В корзине
      - Оплачен
      - Подтвержден
      - Собран
      - Отправлен
      - Доставлен
      - Отменен
      type: string
      description: |-
        * `В корзине` - В корзине
        * `Оплачен` - Оплачен
        * `Подтвержден` - Подтвержден
        * `Собран` - Собран
        * `Отправлен` - Отправлен
        * `Доставлен` - Доставлен
        * `Отменен` - Отменен
    User:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        username:
          type: string
          description: Required. 150 characters or fewer. Letters, digits and @/./+/-/_
            only.
          pattern: ^[\w.@+-]+$
          maxLength: 150
        email:
          type: string
          format: email
          title: Email address
          maxLength: 254
      required:
      - id
      - username
      - password
  securitySchemes:
    tokenAuth:
      type: apiKey
      in: header
      name: Authorization
      description: Token-based authentication with required prefix "Token"
